// <auto-generated />
using System;
using INDIGIPLUS.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INDIGIPLUS.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250529023350_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "C Plus Plus",
                            IsCorrect = true,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "C Programming Plus",
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnswerText = "Computer Plus Plus",
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            AnswerText = "True",
                            IsCorrect = true,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnswerText = "False",
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            AnswerText = "int",
                            IsCorrect = true,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnswerText = "float",
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            AnswerText = "char",
                            IsCorrect = false,
                            QuestionId = 3
                        });
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderIndex");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "C++ is a general-purpose programming language...",
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 914, DateTimeKind.Utc).AddTicks(8695),
                            Description = "Basic concepts of C++ programming",
                            IsActive = true,
                            OrderIndex = 1,
                            Title = "Introduction to C++",
                            UpdatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 914, DateTimeKind.Utc).AddTicks(8698)
                        },
                        new
                        {
                            Id = 2,
                            Content = "In C++, variables are containers for storing data values...",
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(3),
                            Description = "Understanding C++ variables and data types",
                            IsActive = true,
                            OrderIndex = 2,
                            Title = "Variables and Data Types",
                            UpdatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(3)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Control structures allow you to control the flow of execution...",
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(8),
                            Description = "Loops and conditional statements in C++",
                            IsActive = true,
                            OrderIndex = 3,
                            Title = "Control Structures",
                            UpdatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(9)
                        });
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderIndex");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(8172),
                            OrderIndex = 1,
                            QuestionText = "What does C++ stand for?",
                            QuizId = 1,
                            Type = "MultipleChoice"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(9339),
                            OrderIndex = 2,
                            QuestionText = "C++ is an object-oriented programming language.",
                            QuizId = 1,
                            Type = "TrueFalse"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(9342),
                            OrderIndex = 1,
                            QuestionText = "Which data type is used to store whole numbers?",
                            QuizId = 2,
                            Type = "MultipleChoice"
                        });
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(6105),
                            Description = "Test your knowledge of C++ basics",
                            IsActive = true,
                            LessonId = 1,
                            Title = "C++ Basics Quiz",
                            UpdatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(6106)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(7116),
                            Description = "Quiz about C++ variables and data types",
                            IsActive = true,
                            LessonId = 2,
                            Title = "Variables Quiz",
                            UpdatedAt = new DateTime(2025, 5, 29, 2, 33, 49, 915, DateTimeKind.Utc).AddTicks(7116)
                        });
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Answer", b =>
                {
                    b.HasOne("INDIGIPLUS.Api.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Question", b =>
                {
                    b.HasOne("INDIGIPLUS.Api.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Quiz", b =>
                {
                    b.HasOne("INDIGIPLUS.Api.Entities.Lesson", "Lesson")
                        .WithMany("Quizzes")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Lesson", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("INDIGIPLUS.Api.Entities.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
